services:
  uptimemonitor:
    build:
      context: .
    container_name: uptime-monitor
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - TZ=UTC
      - CONFIG=/app/config/config.toml
    volumes:
      - ./config.toml:/app/config/config.toml:ro
    networks:
      - internal-network
    depends_on:
      clickhouse:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  clickhouse:
    image: clickhouse/clickhouse-server:latest-alpine
    container_name: uptime-monitor-clickhouse
    restart: unless-stopped
    expose:
      - "8123"
      - "9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      # This makes ClickHouse consume less resources, which is useful for small setups.
      # https://clickhouse.com/docs/en/operations/tips#using-less-than-16gb-of-ram
      - ./clickhouse/low-resources.xml:/etc/clickhouse-server/config.d/low-resources.xml:ro
    environment:
      - CLICKHOUSE_DB=uptime_monitor
      - CLICKHOUSE_USER=uptime_user
      - CLICKHOUSE_PASSWORD=uptime_password
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
    networks:
      - internal-network
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: ["CMD", "clickhouse-client", "--user", "uptime_user", "--password", "uptime_password", "--host", "localhost", "--query", "SELECT 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s

networks:
  internal-network:
    driver: bridge

volumes:
  clickhouse_data:
    driver: local
